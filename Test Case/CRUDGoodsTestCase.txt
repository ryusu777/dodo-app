GET /goods
	- Input description: Send get request with page filter query params such as pageNumber, rowsPerPage
	- Expected output: Goods data result according to page filter with a page wrapper response


GET /goods/{id}
	- Input: id = an id of existing object
    	- Expected output = Goods data 

    	- Input: id = random string
    	- Expected output: Bad request invalid id response

    	- Input: id = an Id of non existing transaction header
    	- Expected output: Not found response


POST /goods
	- Input: 
	{
		"goodsName": string,
  		"goodsCode": string,
 		"carType": string,
  		"partNumber": string,
  		"purchasePrice": number,
  		"stockAvailable": number,
  		"minimalAvailable": number
	}
	- Expected Output: Created Response with object containing id of the created goods data

	- Input: If either of goodsName, goodsCode, carType, partNumber, or purchasePrice is null 
	{
		"goodsName": null,
  		"goodsCode": string,
 		"carType": string,
  		"partNumber": string,
  		"purchasePrice": number,
  		"stockAvailable": number,
  		"minimalAvailable": number
	}
	- Expected Output: Bad request the GoodsName field is required error message


PUT /goods/{id}
	- Input: id = an id of existing object
    	{
        	"id": same as route id,
  		"goodsName": string,
  		"goodsCode": string,
  		"carType": string,
  		"partNumber": string,
  		"purchasePrice": number,
  		"stockAvailable": number,
  		"minimalAvailable": number
    	}
    	- Expected Output: No content response

	- Input: id = an id of existing object
    	{
        	"id": different from route id,
  		"goodsName": string,
  		"goodsCode": string,
  		"carType": string,
  		"partNumber": string,
  		"purchasePrice": number,
  		"stockAvailable": number,
  		"minimalAvailable": number
    	}
    	- Expected Output: Bad Request id doesn't match response

	- Input: id = an id of non existing object
    	{
        	"id": same as route id,
  		"goodsName": string,
  		"goodsCode": string,
  		"carType": string,
  		"partNumber": string,
  		"purchasePrice": number,
  		"stockAvailable": number,
  		"minimalAvailable": number
    	}
    	- Expected Output: Not found

    	
DELETE /goods/{id}
	- Input: id = an id of existing object
    	- Expected output: No Content response

    	- Input: id = an id of non existing object
    	- Expected output: Not found response

    	- Input: id = a random string
    	- Expected output: Bad request invalid route params